relocate(Model, .before = Metric)
outliers_rmse <-
cv_outliers %>%
filter(Metric == "rmse") %>%
mutate(Metric = "RMSE") %>%
arrange(Mean)
cv_rmse <-
cv %>%
filter(Metric == "rmse") %>%
mutate(Metric = "RMSE") %>%
arrange(Mean)
cbind(outliers_rmse, cv_rmse) %>%
kbl(format = "latex", booktabs = TRUE, digits = 3,
caption = "Table of Models by RMSE") %>%
kable_styling(font_size = 11, latex_options = c("striped", "HOLD_position"),
stripe_color = "#e6e6fa",
full_width = FALSE) %>%
add_header_above(c("with Outliers" = 4,
"no Outliers" = 4))
outliers_rsq <-
cv_outliers %>%
filter(Metric == "rsq") %>%
mutate(Metric = "R-squared") %>%
arrange(desc(Mean))
cv_rsq <-
cv %>%
filter(Metric == "rsq") %>%
mutate(Metric = "R-squared") %>%
arrange(desc(Mean))
cbind(outliers_rsq, cv_rsq) %>%
kbl(format = "latex", booktabs = TRUE, digits = 3,
caption = "Table of Models by R-Squared") %>%
kable_styling(font_size = 11, latex_options = c("striped", "HOLD_position"),
stripe_color = "#e6e6fa",
full_width = FALSE) %>%
add_header_above(c("with Outliers" = 4,
"no Outliers" = 4))
params <-
data.frame(`Hyper-parameters` = c("mtry", "trees", "min_n", "tree_depth",
"learn_rate", "loss_reduction",
"sample_size", "stop_iter"
),
Value = c(11, 127, 6, 6, round(0.0433970914939939, 4),
round(0.12363789646074, 4), 1, 5
)
)
params
source("end_season_model.R")
ls()[c(1:7, 13:20, 22, 26:31, 42:55)]
source("end_season_model.R")
source("end_season_model.R")
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE, cache = TRUE)
library(bookdown)
library(tidyverse)
library(tidymodels)
library(xgboost)
library(vip)
library(caret)
library(car)
library(kableExtra)
library(ggrepel)
library(gridExtra)
library(stringi)
library(patchwork)
# load in the mid_season and end_season data files
mid_season <- read_csv("data/model/end_season_points/mid_season_w_preds.csv")
end_season <- read_csv("data/model/end_season.csv")
nineties <- unique(mid_season$seasonId)[1:5]
two_thousands <- unique(mid_season$seasonId)[6:14]
twenty10s <- unique(mid_season$seasonId)[15:23]
twenty20s <- unique(mid_season$seasonId)[24:26]
# Load in the teams stats at the "middle" of the season (around March 15th)
mid_season <-
mid_season %>%
replace_na(list(clinchIndicator = "none")) %>%
relocate(c(team_name, seasonId), .after = clinchIndicator) %>%
mutate(clinchIndicator = factor(clinchIndicator),
decade = factor(decade,
levels = c("1990", "2000", "2010", "2020"),
labels = c("1990s", "2000s", "2010s", "2020s")
)
)
add_ind <- c("p", "z", "x", "y",
"y", "x", "x", "x",
"x", "x", "x", "x",
"x", "x", "x", "x",
rep("e", 16))
preds_w_index <-
tail(mid_season, n = 32) %>%
arrange(desc(end_season_points)) %>%
mutate(clinchIndicator = add_ind, .before = team_name) %>%
arrange(desc(points))
# Load in the end season stats for 1995-1996 to 2022-2023
end_season <-
end_season %>%
replace_na(list(clinchIndicator = "e")) %>%
relocate(c(team_name, seasonId), .after = clinchIndicator) %>%
mutate(clinchIndicator = factor(clinchIndicator,
levels = c("e", "x", "y", "z", "p"),
labels = c("Eliminated", "Made Playoffs",
"Won Division", "Won Conference",
"President's Trophy")),
decade = factor(ifelse(seasonId %in% nineties, "1990s",
ifelse(seasonId %in% two_thousands, "2000s",
ifelse(seasonId %in% twenty10s,"2010s",
"2020s"
)
)
),
levels = c("1990s", "2000s", "2010s", "2020s")
)
)
var_names <-
mid_season %>%
select(-c(teamCommonName, teamAbbrev, team_name, seasonId, placeName,
streakCode, streakCount, l10GamesPlayed, goalDifferentialPctg,
goalsForPctg, homeGoalDifferential, homeGamesPlayed,
roadGamesPlayed, regulationPlusOtWinPctg, regulationWinPctg,
homePoints, roadPoints, homeGoalsAgainst, roadGoalsAgainst,
homeGoalsFor, roadGoalsFor, l10GoalsAgainst, l10GoalsFor,
roadGoalDifferential, winPctg, pointPctg, roadLosses,
homeLosses, homeOtLosses, goalFor, goalAgainst, roadOtLosses),
-contains("wins")
) %>%
colnames()
var_names[13] <- c("endSeasonPoints")
var_descriptions <-
c("Indicating if the team clinched a playoff spot",
"Total Number of Games Played",
"Goal Differential of Team",
"Goal Differential over Last ten Games",
"Losses over Last ten Games",
"Overtime Losses over Last ten Games",
"Standings Points over Last ten Games",
"Losses",
"Losses in Overtime",
"Standings Points",
"Shootout Losses",
"Wildcard Ranking",
"Predicted Points",
"Decade of Play"
)
var_type <-
c("Categorical", rep("Numeric", 12), "Categorical")
var_data <- tibble(Variables = var_names,
Description = var_descriptions,
Type = var_type)
var_table <-
var_data %>%
kbl(caption = "Table of Variables", booktabs = TRUE,
format = "latex", ) %>%
kable_styling(latex_options = c("HOLD_position", "striped"),
stripe_color = "#e6e6fa", font_size = 11) %>%
row_spec(0, bold = TRUE, align = "c")
var_table
rm(add_ind, var_names, var_type, var_data, var_descriptions)
lm_model <- lm(end_season_points ~ goalDifferential, data = end_season)
lm_summary <- summary(lm_model)
lm_df <- data.frame(round(lm_summary$coefficients[, c(1, 2, 4)], 3))
lm_df %>%
rename(`Std. Error` = Std..Error,
`p-value` = Pr...t..) %>%
kbl(format = "latex", booktabs = TRUE,
caption = "Regression Model Coefficients") %>%
kable_styling(latex_options = c("HOLD_position"), font_size = 11)
ggplot(
data = end_season %>%
group_by(seasonId) %>%
mutate(team_rank = as.integer(rank(-end_season_points))) %>%
select(clinchIndicator, team_name, seasonId, end_season_points, team_rank,
goalDifferential),
aes(x = goalDifferential, y = end_season_points)
) +
geom_point() +
geom_smooth() +
theme_minimal() +
labs(x = "Goal Differential", y = "Points (End of Season)",
title = "Scatterplot of Points vs. Goal Differential") +
theme(axis.title = element_text(size = 14),
axis.text = element_text(size = 14),
title = element_text(face = "bold", size = 14)) +
annotate(geom = "text", x = -75, y = 125,
label = paste0("R-Squared = ", round(lm_summary$r.squared, 2)),
size = 8, color = "blue")
# Goal Differential Playoff data for teams with Goal Differential greater than
# or equal to +20
gd_20 <-
end_season %>%
group_by(seasonId) %>%
mutate(team_rank = as.integer(rank(-end_season_points))) %>%
ungroup() %>%
select(clinchIndicator, team_name, seasonId, end_season_points, team_rank,
goalDifferential) %>%
filter(goalDifferential >= 20) %>%
group_by(clinchIndicator) %>%
summarise(freq = n()) %>%
mutate(pct = freq / sum(freq)) %>%
summarise(`Made Playoffs` = sum(pct[2:5]) * 100,
`Missed Playoffs` = pct[1] * 100) %>%
pivot_longer(cols = c("Made Playoffs", "Missed Playoffs"),
names_to = "status",
values_to = "value")
gd_20_2 <-
gd_20 %>%
mutate(csum = rev(cumsum(rev(value))),
pos = value / 2 + lead(csum, 1),
pos = ifelse(is.na(pos), value / 2, pos))
gd_ok <-
end_season %>%
group_by(seasonId) %>%
mutate(team_rank = as.integer(rank(-end_season_points))) %>%
ungroup() %>%
select(clinchIndicator, team_name, seasonId, end_season_points, team_rank,
goalDifferential) %>%
filter(goalDifferential < 20 & goalDifferential > -10) %>%
group_by(clinchIndicator) %>%
summarise(freq = n()) %>%
mutate(pct = freq / sum(freq)) %>%
summarise(`Made Playoffs` = sum(pct[2:4]) * 100,
`Missed Playoffs` = pct[1] * 100) %>%
pivot_longer(cols = c("Made Playoffs", "Missed Playoffs"),
names_to = "status",
values_to = "value")
gd_ok_2 <-
gd_ok %>%
mutate(csum = rev(cumsum(rev(value))),
pos = value / 2 + lead(csum, 1),
pos = ifelse(is.na(pos), value / 2, pos))
# Goal Differential Playoff data for teams with Goal Differential less than
# or equal to -10
gd_bad <-
end_season %>%
group_by(seasonId) %>%
mutate(team_rank = as.integer(rank(-end_season_points))) %>%
ungroup() %>%
select(clinchIndicator, team_name, seasonId, end_season_points, team_rank,
goalDifferential) %>%
filter(goalDifferential <= -10) %>%
group_by(clinchIndicator) %>%
summarise(freq = n()) %>%
mutate(pct = freq / sum(freq)) %>%
summarise(`Made Playoffs` = sum(pct[2:3]) * 100,
`Missed Playoffs` = pct[1] * 100) %>%
pivot_longer(cols = c("Made Playoffs", "Missed Playoffs"),
names_to = "status",
values_to = "value")
gd_bad_2 <-
gd_bad %>%
mutate(csum = rev(cumsum(rev(value))),
pos = value / 2 + lead(csum, 1),
pos = ifelse(is.na(pos), value / 2, pos))
gd_20_plot <-
ggplot(data = gd_20,
aes(x = "",
y = value,
fill = factor(status,
levels = c("Made Playoffs","Missed Playoffs")
)
)
) +
geom_col(width = 1, color = 1) +
coord_polar("y", start = 0) +
theme_void() +
labs(title = "Goal Differential of +20 or more") +
scale_fill_manual(values = c("Made Playoffs" = "#89cff0",
"Missed Playoffs" = "#fe6f5e"),
name = "Playoff Status")  +
theme(legend.title = element_text(size = 16),
legend.text = element_text(size = 14),
title = element_text(size = 16, face = "bold")) +
geom_label_repel(data = gd_20_2,
aes(y = pos,
label = sprintf("%.2f%%", value)
),
nudge_x = 1,
show.legend = FALSE,
size = 8)
gd_ok_plot <-
ggplot(data = gd_ok,
aes(x = "",
y = value,
fill = factor(status,
levels = c("Made Playoffs","Missed Playoffs")
)
)
) +
geom_col(width = 1, color = 1) +
coord_polar("y", start = 0) +
theme_void() +
labs(title = "Goal Differential between -10 and +20") +
scale_fill_manual(values = c("Made Playoffs" = "#89cff0",
"Missed Playoffs" = "#fe6f5e"),
name = "Playoff Status")  +
theme(legend.title = element_text(size = 16),
legend.text = element_text(size = 14),
title = element_text(size = 16, face = "bold")) +
geom_label_repel(data = gd_ok_2,
aes(y = pos,
label = sprintf("%.2f%%", value)
),
nudge_x = 1,
nudge_y = -10,
show.legend = FALSE,
size = 8)
gd_bad_plot <-
ggplot(data = gd_bad,
aes(x = "",
y = value,
fill = factor(status,
levels = c("Made Playoffs","Missed Playoffs")
)
)
) +
geom_col(width = 1, color = 1) +
coord_polar("y", start = 0) +
theme_void() +
labs(title = "Goal Differential of -10 or less") +
scale_fill_manual(values = c("Made Playoffs" = "#89cff0",
"Missed Playoffs" = "#fe6f5e"),
name = "Playoff Status")  +
theme(legend.title = element_text(size = 16),
legend.text = element_text(size = 14),
title = element_text(size = 16, face = "bold", hjust = 0.5)) +
geom_label_repel(data = gd_bad_2,
aes(y = pos,
label = sprintf("%.2f%%", value)
),
nudge_x = 1,
show.legend = FALSE,
size = 8)
gd_bad_plot + plot_spacer() + gd_ok_plot  + plot_spacer() + gd_20_plot +
plot_layout(heights = unit(c(6.5), 'cm'),
guides = "collect")
ggplot(data = end_season,
aes(x = clinchIndicator, y = end_season_points,
fill = clinchIndicator)
) +
geom_boxplot() +
labs(title = "Boxplot of Points by Clinch Status",
x = "Clinch Status", y = "Points (end of season)") +
scale_fill_discrete(name = "Clinch Status") +
theme(title = element_text(size = 14, face = "bold"),
axis.text = element_text(size = 14),
legend.title = element_text(size = 14),
legend.text = element_text(size = 14))
outlier_df <-
end_season %>%
group_by(clinchIndicator) %>%
arrange(desc(end_season_points)) %>%
ungroup() %>%
filter(clinchIndicator %in% c("Made Playoffs", "Won Division")) %>%
rename(`Clinch Status` = clinchIndicator,
Team = team_name,
Season = seasonId,
Points = end_season_points) %>%
dplyr::slice(c(2, 314, 335, 336)) %>%
select(`Clinch Status`, Team, Season, Points)
outlier_df %>%
kbl(format = "latex", booktabs = TRUE,
caption = "Table of Playoff Outliers") %>%
kable_styling(latex_options = c("HOLD_position"),
font_size = 11)
ggplot(data = end_season,
aes(x = decade, y = end_season_points, fill = decade)) +
geom_boxplot() +
labs(title = "Points by Decade",
x = "Decade",
y = "Points (end of Season)") +
scale_fill_discrete(name = "Decade") +
theme(title = element_text(size = 14, face = "bold"),
axis.text = element_text(size = 14),
legend.title = element_text(size = 14),
legend.text = element_text(size = 14))
cv_outliers <- read_csv("data/model/end_season_points/model_metrics.csv")
cv_outliers <-
cv_outliers %>%
select(-.estimator, -n) %>%
rename(Metric = .metric,
Mean = mean,
`Std. Error` = std_err,
Model = model) %>%
relocate(Model, .before = Metric)
cv <- read_csv("data/model/end_season_points/model_metrics_no_outliers.csv")
cv <-
cv %>%
select(-.estimator, -n) %>%
rename(Metric = .metric,
Mean = mean,
`Std. Error` = std_err,
Model = model) %>%
mutate(Model = str_remove_all(Model, "\\(no outliers\\)")) %>%
relocate(Model, .before = Metric)
outliers_rmse <-
cv_outliers %>%
filter(Metric == "rmse") %>%
mutate(Metric = "RMSE") %>%
arrange(Mean)
cv_rmse <-
cv %>%
filter(Metric == "rmse") %>%
mutate(Metric = "RMSE") %>%
arrange(Mean)
cbind(outliers_rmse, cv_rmse) %>%
kbl(format = "latex", booktabs = TRUE, digits = 3,
caption = "Table of Models by RMSE") %>%
kable_styling(font_size = 11, latex_options = c("striped", "HOLD_position"),
stripe_color = "#e6e6fa",
full_width = FALSE) %>%
add_header_above(c("with Outliers" = 4,
"no Outliers" = 4))
outliers_rsq <-
cv_outliers %>%
filter(Metric == "rsq") %>%
mutate(Metric = "R-squared") %>%
arrange(desc(Mean))
cv_rsq <-
cv %>%
filter(Metric == "rsq") %>%
mutate(Metric = "R-squared") %>%
arrange(desc(Mean))
cbind(outliers_rsq, cv_rsq) %>%
kbl(format = "latex", booktabs = TRUE, digits = 3,
caption = "Table of Models by R-Squared") %>%
kable_styling(font_size = 11, latex_options = c("striped", "HOLD_position"),
stripe_color = "#e6e6fa",
full_width = FALSE) %>%
add_header_above(c("with Outliers" = 4,
"no Outliers" = 4))
playoff_table <-
preds_w_index %>%
mutate(clinchIndicator = factor(clinchIndicator,
levels = c("e", "x", "y", "z", "p"),
labels = c("Eliminated", "Made Playoffs",
"Won Division", "Won Conference",
"President's Trophy"))) %>%
arrange(desc(end_season_points)) %>%
select(clinchIndicator, team_name, seasonId, end_season_points) %>%
rename(`Clinch Status` = clinchIndicator,
Team = team_name,
Season = seasonId,
Points = end_season_points) %>%
filter(!(`Clinch Status` %in% c("Eliminated"))) %>%
select(-Season)
others <-
preds_w_index %>%
mutate(clinchIndicator = factor(clinchIndicator,
levels = c("e", "x", "y", "z", "p"),
labels = c("Eliminated", "Made Playoffs",
"Won Division", "Won Conference",
"President's Trophy"))) %>%
arrange(desc(end_season_points)) %>%
select(clinchIndicator, team_name, seasonId, end_season_points) %>%
rename(`Clinch Status` = clinchIndicator,
Team = team_name,
Season = seasonId,
Points = end_season_points) %>%
filter(`Clinch Status` %in% c("Eliminated")) %>%
select(-Season)
cbind(playoff_table, others) %>%
kbl(format = "latex", booktabs = TRUE,
caption = "Table of Final Standings Predictions") %>%
kable_styling(latex_options = c("striped", "HOLD_position", "scale_down"),
stripe_color = "#e6e6fa", font_size = 10) %>%
add_header_above(c("Playoff Teams" = 3,
"Non-Playoff Teams" = 3))
preds_w_index <-
preds_w_index %>%
arrange(desc(end_season_points))
mid_rank <- rank(rev(preds_w_index$points), ties.method = "first")
end_rank <- rank(rank(rev(preds_w_index$end_season_points),
ties.method = "first"))
rank_change <- end_rank - mid_rank
preds_w_index <-
preds_w_index %>%
mutate(Movement = as.character(rev(rank_change))) %>%
mutate(Movement = factor(Movement,
levels = c("-3", "-2", "-1", "0", "1", "2", "3")
)
)
rank_tbl_playoffs <-
preds_w_index %>%
filter(!(clinchIndicator %in% c("e"))) %>%
select(team_name, Movement) %>%
rename(Team = team_name)
rank_tbl_non <-
preds_w_index %>%
filter(clinchIndicator %in% c("e")) %>%
select(team_name, Movement) %>%
rename(Team = team_name)
cbind(rank_tbl_playoffs, rank_tbl_non) %>%
kbl(format = "latex", booktabs = TRUE,
caption = "Table of Predicted Standings Movement") %>%
kable_styling(latex_options = c("striped", "HOLD_position", "scale_down"),
stripe_color = "#e6e6fa", font_size = 11) %>%
add_header_above(c("Playoff Teams" = 2,
"Non-Playoff Teams" = 2))
citation("tidyverse")
citation("bookdown")
toBibtex(citation("bookdown2"))
toBibtex(citation("bookdown"))
citation("tidymodels")
citation("kableExtra")
citation("ggrepel")
citation("gridExtra")
citation(stringi)
citation("stringi")
citation("patchwork")
citation("xgboost")
citation("nnet")
citation("ranger")
citation("kernlab")
toBibtex(citation("kernlab"))
